<?php

use Drupal\asset\Entity\AssetType;
use Drupal\views\ViewExecutable;

/**
 * @file
 * Primary module hooks for farmOS Contrib Template module.
 */

/**
 * Implements hook_views_pre_render().
 */
function farm_opentrees_views_pre_render(ViewExecutable $view) {

  // Render a map attachment above views of assets.
  if ($view->id() == 'tree_assets' && in_array($view->current_display, ['page', 'page_type'])) {

    $view->element['#attached']['library'][] = 'farm_opentrees/create_co2_asset';

    // Get all asset bundles.
    $asset_bundles = \Drupal::service('entity_type.bundle.info')->getBundleInfo($view->getBaseEntityType()->id());

    // Start array of filtered bundles.
    $filtered_bundles = $asset_bundles;

    // Start array of asset layers to add.
    $asset_layers = [
      'full' => [],
    ];

    // Save the group labels.
    $layer_group = $view->getBaseEntityType()->getCollectionLabel();

    // Get exposed filters.
    $exposed_filters = $view->getExposedInput();

    $bundle_filters = ['tree'];

    // Filter by bundle, if desired.
    if (!empty($bundle_filters)) {
      $filtered_bundles = [];
      foreach ($bundle_filters as $bundle) {
        $filtered_bundles[$bundle] = $asset_bundles[$bundle];
      }
    }

    // Add a cluster layer for summarizing asset counts.
    $asset_layers['cluster']['all'] = [
      'label' => t('Tree counts'),
      'cluster' => TRUE,
      'filters' => $exposed_filters,
    ];
    if (!empty($bundle_filters)) {
      $asset_layers['cluster']['all']['asset_type'] = implode('+', $bundle_filters);
    }

    // Add a full asset geometry layer for each asset type.
    foreach ($filtered_bundles as $bundle => $bundle_info) {

      // Load the bundle entity.
      $type = AssetType::load($bundle);

      // Load the map layer style.
      /** @var \Drupal\farm_map\Entity\LayerStyleInterface $layer_style */
      $layer_style = \Drupal::service('farm_map.layer_style_loader')->load(['asset_type' => $bundle]);
      if (!is_null($layer_style)) {
        $color = $layer_style->get('color');
      }

      // Add layer for the asset type.
      $asset_layers['full']['full_' . $bundle] = [
        'group' => $type->getThirdPartySetting('farm_location', 'is_location', FALSE) ? t('Location assets') : $layer_group,
        'label' => $bundle_info['label'],
        'asset_type' => $bundle,
        'filters' => $exposed_filters,
        'color' => $color ?? 'orange',
        'zoom' => TRUE,
      ];
    }

    // Build the map render array.
    $map = [
      '#type' => 'farm_map',
      '#map_type' => 'asset_list',
    ];
    $all_layers = array_merge($asset_layers['cluster'], $asset_layers['full']);
    $map['#map_settings']['asset_type_layers'] = $all_layers;

    // Render the map.
    $view->attachment_before['asset_map'] = $map;
  }
}
